In Access, there were two types of modules: 
    standard modules 
    and class modules. 
    
In Access 95, class modules existed only in association with a form or report. 
In Access 97, they also existed on the Modules tab of the Database window.

# Class Modules

Use a class module to create a definition for a custom object. 
The name with which you save the class module becomes the name of your custom object. 
Public Sub and Function procedures that you define within a class module become custom methods of the object. 
Public Property Let, Property Get, and Property Set procedures become properties of the object.

After you've defined procedures within the class module, you can create the new object by creating a new instance of the class. 
To create a new instance of a class, you declare a variable of the type defined by that class. 
For example, if the name of your class is ABasicClass, you would create a new instance of it in the following manner:

Dim abc As New ABasicClass
abc.ListNames


# Standard Modules

When you open a form in Form view, whether from the user interface or from Visual Basic, 
you create an instance of that form's class module. 

In other words, you designate space in memory where the object now exists, 
and you can then call its methods and set or return its properties from code, 
as you would for any built-in object. 
The same is true when you open a report in Print Preview.

When you refer to a form in Visual Basic code, you are usually working with the default instance of the form's class. 
A form's class has only one default instance. 
You can also create multiple instances of the same form's class from Visual Basic. 
When you create multiple instances of a form's class, you create nondefault instances.

There are four ways to create the default instance of a form. 
1.  You can open an existing form by using the user interface, 
2.  by executing the OpenForm method of the DoCmd object, 
3.  by calling the CreateForm method and switching the new form into Form view, or 
4.  by using Visual Basic to create a variable of type Form to refer to the default instance. 

The following example opens an Employees form and points a Form object variable to it:

Dim frm As Form 
DoCmd.OpenForm "Employees" 
Set frm = Forms!Employees

Access also provides a shortcut that enables you to open a form and 
refer to a method or property of that form or one of its controls in one step. 
You refer to the form's class module as shown in the following example:

Form_Employees.Visible = True 
Form_Employees.Caption = "New Employees"


When you run this code, Access opens the Employees form in Form view if it's not already open 
and sets the form's caption to "New Employees." 
The form isn't visible until you explicitly set its Visible property to True. 
When the procedure that calls this code has finished executing, this instance of the form is destroyed; that is, the form is closed.


https://docs.microsoft.com/en-us/windows/win32/winhttp/winhttp-start-page
https://docs.microsoft.com/en-us/windows/win32/winhttp/about-winhttp

https://docs.vinsight.net/api/examples/vb-script-example/

# Reference